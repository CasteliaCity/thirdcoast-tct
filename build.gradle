plugins {
    id 'java'
    id 'groovy'
    id 'jaci.openrio.gradle.GradleRIO' version '2018.01.22'
    id 'com.diffplug.gradle.spotless' version '3.9.0'
    id 'net.ltgt.apt-idea' version '0.13'
}

version = '18.1.5'

repositories {
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' } // nanohttpd
}

dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile 'org.strykeforce.thirdcoast:core:18.1.3'
    compile 'org.jline:jline-terminal:3.5.2'
    compile 'org.jline:jline-reader:3.5.2'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compileOnly 'org.jetbrains:annotations:15.0'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    apt 'com.google.dagger:dagger-compiler:2.14.1'

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testRuntime 'net.bytebuddy:byte-buddy:1.7.9'
    testRuntime 'org.objenesis:objenesis:2.6'
}

def robotManifest = {
    attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase',
            'Robot-Class': 'org.strykeforce.thirdcoast.telemetry.tct.Robot',
            'Specification-Title': 'Third Coast Telemetry',
            'Specification-Version': version,
            'Implementation-Title': 'Third Coast Telemetry Utility (tct)',
            'Implementation-Version': version
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest robotManifest
}

spotless {
    java {
        googleJavaFormat()
        target '**/*.java'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}
